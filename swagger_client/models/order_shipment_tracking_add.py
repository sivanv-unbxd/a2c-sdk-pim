# coding: utf-8

"""
    Swagger API2Cart

    API2Cart  # noqa: E501

    OpenAPI spec version: 1.1
    Contact: contact@api2cart.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class OrderShipmentTrackingAdd(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'store_id': 'str',
        'order_id': 'str',
        'shipment_id': 'str',
        'carrier_id': 'str',
        'tracking_provider': 'str',
        'tracking_number': 'str',
        'tracking_link': 'str',
        'send_notifications': 'bool'
    }

    attribute_map = {
        'store_id': 'store_id',
        'order_id': 'order_id',
        'shipment_id': 'shipment_id',
        'carrier_id': 'carrier_id',
        'tracking_provider': 'tracking_provider',
        'tracking_number': 'tracking_number',
        'tracking_link': 'tracking_link',
        'send_notifications': 'send_notifications'
    }

    def __init__(self, store_id=None, order_id=None, shipment_id=None, carrier_id=None, tracking_provider=None, tracking_number=None, tracking_link=None, send_notifications=False):  # noqa: E501
        """OrderShipmentTrackingAdd - a model defined in Swagger"""  # noqa: E501

        self._store_id = None
        self._order_id = None
        self._shipment_id = None
        self._carrier_id = None
        self._tracking_provider = None
        self._tracking_number = None
        self._tracking_link = None
        self._send_notifications = None
        self.discriminator = None

        if store_id is not None:
            self.store_id = store_id
        if order_id is not None:
            self.order_id = order_id
        self.shipment_id = shipment_id
        if carrier_id is not None:
            self.carrier_id = carrier_id
        if tracking_provider is not None:
            self.tracking_provider = tracking_provider
        self.tracking_number = tracking_number
        if tracking_link is not None:
            self.tracking_link = tracking_link
        if send_notifications is not None:
            self.send_notifications = send_notifications

    @property
    def store_id(self):
        """Gets the store_id of this OrderShipmentTrackingAdd.  # noqa: E501

        Store Id  # noqa: E501

        :return: The store_id of this OrderShipmentTrackingAdd.  # noqa: E501
        :rtype: str
        """
        return self._store_id

    @store_id.setter
    def store_id(self, store_id):
        """Sets the store_id of this OrderShipmentTrackingAdd.

        Store Id  # noqa: E501

        :param store_id: The store_id of this OrderShipmentTrackingAdd.  # noqa: E501
        :type: str
        """

        self._store_id = store_id

    @property
    def order_id(self):
        """Gets the order_id of this OrderShipmentTrackingAdd.  # noqa: E501

        Defines the order id  # noqa: E501

        :return: The order_id of this OrderShipmentTrackingAdd.  # noqa: E501
        :rtype: str
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id):
        """Sets the order_id of this OrderShipmentTrackingAdd.

        Defines the order id  # noqa: E501

        :param order_id: The order_id of this OrderShipmentTrackingAdd.  # noqa: E501
        :type: str
        """

        self._order_id = order_id

    @property
    def shipment_id(self):
        """Gets the shipment_id of this OrderShipmentTrackingAdd.  # noqa: E501

        Shipment id indicates the number of delivery  # noqa: E501

        :return: The shipment_id of this OrderShipmentTrackingAdd.  # noqa: E501
        :rtype: str
        """
        return self._shipment_id

    @shipment_id.setter
    def shipment_id(self, shipment_id):
        """Sets the shipment_id of this OrderShipmentTrackingAdd.

        Shipment id indicates the number of delivery  # noqa: E501

        :param shipment_id: The shipment_id of this OrderShipmentTrackingAdd.  # noqa: E501
        :type: str
        """
        if shipment_id is None:
            raise ValueError("Invalid value for `shipment_id`, must not be `None`")  # noqa: E501

        self._shipment_id = shipment_id

    @property
    def carrier_id(self):
        """Gets the carrier_id of this OrderShipmentTrackingAdd.  # noqa: E501

        Defines tracking carrier id  # noqa: E501

        :return: The carrier_id of this OrderShipmentTrackingAdd.  # noqa: E501
        :rtype: str
        """
        return self._carrier_id

    @carrier_id.setter
    def carrier_id(self, carrier_id):
        """Sets the carrier_id of this OrderShipmentTrackingAdd.

        Defines tracking carrier id  # noqa: E501

        :param carrier_id: The carrier_id of this OrderShipmentTrackingAdd.  # noqa: E501
        :type: str
        """

        self._carrier_id = carrier_id

    @property
    def tracking_provider(self):
        """Gets the tracking_provider of this OrderShipmentTrackingAdd.  # noqa: E501

        Defines name of the company which provides shipment tracking  # noqa: E501

        :return: The tracking_provider of this OrderShipmentTrackingAdd.  # noqa: E501
        :rtype: str
        """
        return self._tracking_provider

    @tracking_provider.setter
    def tracking_provider(self, tracking_provider):
        """Sets the tracking_provider of this OrderShipmentTrackingAdd.

        Defines name of the company which provides shipment tracking  # noqa: E501

        :param tracking_provider: The tracking_provider of this OrderShipmentTrackingAdd.  # noqa: E501
        :type: str
        """

        self._tracking_provider = tracking_provider

    @property
    def tracking_number(self):
        """Gets the tracking_number of this OrderShipmentTrackingAdd.  # noqa: E501

        Defines tracking number  # noqa: E501

        :return: The tracking_number of this OrderShipmentTrackingAdd.  # noqa: E501
        :rtype: str
        """
        return self._tracking_number

    @tracking_number.setter
    def tracking_number(self, tracking_number):
        """Sets the tracking_number of this OrderShipmentTrackingAdd.

        Defines tracking number  # noqa: E501

        :param tracking_number: The tracking_number of this OrderShipmentTrackingAdd.  # noqa: E501
        :type: str
        """
        if tracking_number is None:
            raise ValueError("Invalid value for `tracking_number`, must not be `None`")  # noqa: E501

        self._tracking_number = tracking_number

    @property
    def tracking_link(self):
        """Gets the tracking_link of this OrderShipmentTrackingAdd.  # noqa: E501

        Defines custom tracking link  # noqa: E501

        :return: The tracking_link of this OrderShipmentTrackingAdd.  # noqa: E501
        :rtype: str
        """
        return self._tracking_link

    @tracking_link.setter
    def tracking_link(self, tracking_link):
        """Sets the tracking_link of this OrderShipmentTrackingAdd.

        Defines custom tracking link  # noqa: E501

        :param tracking_link: The tracking_link of this OrderShipmentTrackingAdd.  # noqa: E501
        :type: str
        """

        self._tracking_link = tracking_link

    @property
    def send_notifications(self):
        """Gets the send_notifications of this OrderShipmentTrackingAdd.  # noqa: E501

        Send notifications to customer after tracking was created  # noqa: E501

        :return: The send_notifications of this OrderShipmentTrackingAdd.  # noqa: E501
        :rtype: bool
        """
        return self._send_notifications

    @send_notifications.setter
    def send_notifications(self, send_notifications):
        """Sets the send_notifications of this OrderShipmentTrackingAdd.

        Send notifications to customer after tracking was created  # noqa: E501

        :param send_notifications: The send_notifications of this OrderShipmentTrackingAdd.  # noqa: E501
        :type: bool
        """

        self._send_notifications = send_notifications

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(OrderShipmentTrackingAdd, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, OrderShipmentTrackingAdd):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
