# coding: utf-8

"""
    Swagger API2Cart

    API2Cart  # noqa: E501

    OpenAPI spec version: 1.1
    Contact: contact@api2cart.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class InlineResponse20030ResultSupportedPlatforms(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'cart_id': 'str',
        'cart_name': 'str',
        'cart_versions': 'str',
        'params': 'InlineResponse20030ResultParams'
    }

    attribute_map = {
        'cart_id': 'cart_id',
        'cart_name': 'cart_name',
        'cart_versions': 'cart_versions',
        'params': 'params'
    }

    def __init__(self, cart_id=None, cart_name=None, cart_versions=None, params=None):  # noqa: E501
        """InlineResponse20030ResultSupportedPlatforms - a model defined in Swagger"""  # noqa: E501

        self._cart_id = None
        self._cart_name = None
        self._cart_versions = None
        self._params = None
        self.discriminator = None

        if cart_id is not None:
            self.cart_id = cart_id
        if cart_name is not None:
            self.cart_name = cart_name
        if cart_versions is not None:
            self.cart_versions = cart_versions
        if params is not None:
            self.params = params

    @property
    def cart_id(self):
        """Gets the cart_id of this InlineResponse20030ResultSupportedPlatforms.  # noqa: E501


        :return: The cart_id of this InlineResponse20030ResultSupportedPlatforms.  # noqa: E501
        :rtype: str
        """
        return self._cart_id

    @cart_id.setter
    def cart_id(self, cart_id):
        """Sets the cart_id of this InlineResponse20030ResultSupportedPlatforms.


        :param cart_id: The cart_id of this InlineResponse20030ResultSupportedPlatforms.  # noqa: E501
        :type: str
        """

        self._cart_id = cart_id

    @property
    def cart_name(self):
        """Gets the cart_name of this InlineResponse20030ResultSupportedPlatforms.  # noqa: E501


        :return: The cart_name of this InlineResponse20030ResultSupportedPlatforms.  # noqa: E501
        :rtype: str
        """
        return self._cart_name

    @cart_name.setter
    def cart_name(self, cart_name):
        """Sets the cart_name of this InlineResponse20030ResultSupportedPlatforms.


        :param cart_name: The cart_name of this InlineResponse20030ResultSupportedPlatforms.  # noqa: E501
        :type: str
        """

        self._cart_name = cart_name

    @property
    def cart_versions(self):
        """Gets the cart_versions of this InlineResponse20030ResultSupportedPlatforms.  # noqa: E501


        :return: The cart_versions of this InlineResponse20030ResultSupportedPlatforms.  # noqa: E501
        :rtype: str
        """
        return self._cart_versions

    @cart_versions.setter
    def cart_versions(self, cart_versions):
        """Sets the cart_versions of this InlineResponse20030ResultSupportedPlatforms.


        :param cart_versions: The cart_versions of this InlineResponse20030ResultSupportedPlatforms.  # noqa: E501
        :type: str
        """

        self._cart_versions = cart_versions

    @property
    def params(self):
        """Gets the params of this InlineResponse20030ResultSupportedPlatforms.  # noqa: E501


        :return: The params of this InlineResponse20030ResultSupportedPlatforms.  # noqa: E501
        :rtype: InlineResponse20030ResultParams
        """
        return self._params

    @params.setter
    def params(self, params):
        """Sets the params of this InlineResponse20030ResultSupportedPlatforms.


        :param params: The params of this InlineResponse20030ResultSupportedPlatforms.  # noqa: E501
        :type: InlineResponse20030ResultParams
        """

        self._params = params

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse20030ResultSupportedPlatforms, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse20030ResultSupportedPlatforms):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
